[
  {
    "id": 1,
    "title": "Analyzing 75 Years of LEGO",
    "subtitle": "Dive into the Data: Analyzing Piece Counts, Themes, and Color Usage in the LEGO Universe",
    "date": "April 05, 2024",
    "image_url": "https://blog.timonrieger.de/static/uploads/18.png",
    "author": "Timon Rieger",
    "body": "<h2>&nbsp;</h2>\r\n\r\n<h2>About Lego</h2>\r\n\r\n<p>LEGO is a globally recognized brand of construction toys, known for its interlocking plastic bricks. The name &quot;LEGO&quot; comes from the Danish words &quot;leg godt,&quot; meaning &quot;play well.&quot; LEGO bricks are designed to be versatile and can be assembled and connected in countless ways, allowing children and adults alike to build various structures, vehicles, and imaginative creations.</p>\r\n\r\n<hr />\r\n<h2>&nbsp;</h2>\r\n\r\n<h2>History of Lego</h2>\r\n\r\n<p>Founded by Ole Kirk Christiansen in 1932, the LEGO Group initially crafted wooden toys in Denmark. With a humble start making wooden ducks and yo-yos, the company transitioned to plastic toys in 1947, setting the stage for its iconic future.</p>\r\n\r\n<p>In 1958, LEGO revolutionized the toy industry with the introduction of the modern LEGO brick. Featuring an interlocking design, these bricks offered limitless creative potential, quickly becoming a beloved staple of playtime for children worldwide.</p>\r\n\r\n<p>Throughout the 1960s and 1970s, LEGO experienced exponential growth, expanding its product line with new themes and sets. Innovations such as wheels, windows, and minifigures captivated imaginations and propelled LEGO to new heights of popularity.</p>\r\n\r\n<p>The 1980s and 1990s saw LEGO embrace themed sets, introducing captivating narratives with LEGO Space, LEGO Castle, and LEGO Pirates. Licensing agreements with franchises like Star Wars and Harry Potter brought beloved characters to life in LEGO form, captivating fans of all ages.</p>\r\n\r\n<p>The early 2000s presented challenges for LEGO, with financial difficulties necessitating a significant restructuring effort in 2004. Streamlining operations and refocusing on its core product, LEGO weathered the storm and emerged stronger than ever.</p>\r\n\r\n<p>In the 2010s and beyond, LEGO experienced a renaissance, fueled by innovative new themes, expanded licensing agreements, and ventures into digital media and entertainment. Committed to sustainability and social responsibility, LEGO continues to inspire creativity and play for generations to come.</p>\r\n\r\n<hr />\r\n<h2>&nbsp;</h2>\r\n\r\n<h2>Statistics about Lego</h2>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3>How many LEGO sets have been released each year?</h3>\r\n\r\n<h3><img alt=\"\" src=\"https://blog.timonrieger.de/static/uploads/13.png\" style=\"height:100%; width:100%\" /></h3>\r\n\r\n<p>This graph illustrates the annual release of LEGO sets over time. Initially, the number of sets released per year was modest, with fewer than 10 sets in the early years. However, this figure surged to over 800 sets in 2019, reaching a cumulative amount of close to 16,000 sets. Interestingly, there are noticeable fluctuations over time. In the early 2000s, the number of new sets decreased by approximately 30%, persisting until 2006 when a reversal occurred. This decline can be attributed to the company&#39;s financial challenges and subsequent restructuring efforts during this time.</p>\r\n\r\n<h3><br />\r\nWhat is the average number of pieces in a LEGO set?</h3>\r\n\r\n<p><img alt=\"\" src=\"https://blog.timonrieger.de/static/uploads/14.png\" style=\"height:100%; width:100%\" /></p>\r\n\r\n<p>This graph illustrates the complexity of LEGO sets over time by showcasing the average number of pieces in each set for a given year. The overarching trend reveals an increase in set complexity over the years. Initially, builders contended with constructing sets containing around 50 pieces, a figure that has quadrupled since. Particularly notable is the surge in complexity during the early 2000s, where sets nearly doubled in piece count compared to preceding years. The grey line represents a 5-year moving average, serving as a trend line to elucidate long-term patterns in set complexity.</p>\r\n\r\n<h3><br />\r\nWhich LEGO set has the highest piece count?</h3>\r\n\r\n<p><img alt=\"\" src=\"https://blog.timonrieger.de/static/uploads/15.png\" style=\"height:100%; width:100%\" /></p>\r\n\r\n<p>Our graph highlights the LEGO set with the highest piece count. Each bar represents a different LEGO set, with its length reflecting the number of pieces in the set. It&#39;s noteworthy that all of these sets were released after 2015, reaffirming the trend of growing complexity in LEGO designs.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3>What LEGO theme has the highest number of sets?</h3>\r\n\r\n<p><img alt=\"\" src=\"https://blog.timonrieger.de/static/uploads/16.png\" style=\"height:100%; width:100%\" /></p>\r\n\r\n<p>Our graph visually depicts the distribution of LEGO sets across various themes, revealing which theme boasts the highest number of sets. Each bar represents a different theme, with the height of the bar indicating the number of sets within that theme.</p>\r\n\r\n<h3><br />\r\nWhat is the most common LEGO color?</h3>\r\n\r\n<p><img alt=\"\" src=\"https://blog.timonrieger.de/static/uploads/17.png\" style=\"height:100%; width:100%\" /></p>\r\n\r\n<p>The bar chart visually illustrates the popularity of the top 10 LEGO colors, highlighting their frequency of use. For instance, black comprises 18% of all existing LEGO parts, red 7% and tan 3%. These 10 colors, out of a total of 267, are the most commonly utilized by designers.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><em>The data presented in this blog post is sourced directly from The LEGO Group provided by <a href=\"https://www.rebrickable.com/downloads/\" target=\"_blank\">Rebrickable</a>. The graphics and visualizations showcased herein are created by Timon Rieger, with all rights reserved. Data is up to date with end of 2023.</em></p>\r\n"
  },
  {
    "id": 2,
    "title": "About Life and Death",
    "subtitle": "Life wisdom by Marcus Aurelius (Part 1)",
    "date": "April 15, 2024",
    "image_url": "https://blog.timonrieger.de/static/uploads/19.png",
    "author": "Timon Rieger",
    "body": "<h2>&nbsp;</h2>\r\n\r\n<h2><strong>Who is Marcus Aurelius?</strong></h2>\r\n\r\n<p>As a Roman emperor and Stoic, Marcus Aurelius is known for his profound thoughts and life wisdom, which still inspire many people today. His reflections on life, death, and human nature offer timeless insights that are relevant in the modern world. This blog post takes a closer look at some of his most important quotes and their relevance to our lives today.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h2><strong>7 quotes&nbsp;about life and death</strong></h2>\r\n\r\n<blockquote>\r\n<p>But death and life, fame and lack of glory, suffering and joy, wealth and poverty and all of these are granted to good and bad people without distinction, as things that constitute neither moral advantages nor moral defects: therefore they are neither good nor evil (neither a blessing nor a misfortune).</p>\r\n</blockquote>\r\n\r\n<p>This quote deals with the theme of equality and impartiality of fate towards all people. It states that certain aspects of life, such as death and life, fame and fame, suffering and joy, as well as wealth and poverty, affect every person regardless of their moral merits or deficiencies. The quote argues that these things cannot be considered either good luck or bad luck because they have no direct connection to a person&#39;s moral quality. It emphasizes the idea that fate and the external circumstances of life are often independent of personal merit or blame.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<blockquote>\r\n<p>So we have to think about two things: firstly, that everything is essentially the same and follows the same course, and that it makes no difference whether one sees one and the same thing for a hundred or two hundred years or forever. And then that even those who have lived the longest only lose the same as those who die very young. Because it is only the now that one can be deprived of, because this is the only thing one possesses, and no one can lose what he does not have.</p>\r\n</blockquote>\r\n\r\n<p>This sentence reflects on the equality and universality of time as well as the transience of all life. The quote emphasizes that every individual&#39;s life is ultimately subject to the same fate, regardless of the duration or intensity of their existence. It highlights the importance of the present moment and reminds us that we only own the now and cannot lose what we don&#39;t have. It thus invites you to cultivate appreciation and awareness for the present moment</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<blockquote>\r\n<p>Death is the rest from the contradictions of sense perceptions, from the stirrings of our passions, from the developments of our mind and from the service of the flesh</p>\r\n</blockquote>\r\n\r\n<p>This quote from Marcus Aurelius reflects the Stoic philosophy of death. He does not view death as something final or terrible, but rather as a kind of liberation from earthly limitations and passions. For him, death means the end of the sensory perceptions, the emotional impulses and the mental hustle and bustle that often accompany life. It is a retreat into silence and calm, free from the distractions and limitations of the physical body. Marcus Aurelius reminds us not to view death as something frightening, but as a natural part of life that frees us from the obstacles and contradictions of the world.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<blockquote>\r\n<p>Soon everything will be with you and soon you will be forgotten by everyone.</p>\r\n</blockquote>\r\n\r\n<p>This quote is a reminder that our lives are fleeting and that we will ultimately be forgotten. It emphasizes the vanity of worldly things and reminds us that we should not become too attached to material possessions or fleeting successes. Instead, we should live our lives thoughtfully and create sustainable values ​​that will last beyond our own death.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<blockquote>\r\n<p>Whatever you do, ask yourself if death is so terrible because it robs you of it.</p>\r\n</blockquote>\r\n\r\n<p>This quote encourages reflection on the relative importance and influence of death. It asks you to look at the things you are busy with in relation to the finiteness of life. By accepting death as an inevitable part of life and considering its relative impact on daily affairs, one can develop a more calm and reflective approach to life. Ultimately, this should lead to you setting your own priorities and actions more consciously and allowing yourself to be less influenced by unimportant fears and worries.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<blockquote>\r\n<p>Think of the nature of the body and soul in which you must let death take hold of you, as well as the shortness of life, the immeasurable time behind you and in front of you, the frailty of every substance.</p>\r\n</blockquote>\r\n\r\n<p>It reminds us to recognize the finiteness of our existence and the fragility of the human body and mind. Marcus Aurelius emphasizes the importance of realizing that our lives are limited and that death is inevitable. By contemplating the impermanence of life and the fragility of the body, we can develop a deeper appreciation for life and focus on living each moment consciously. The quote also reminds us that death is a natural part of life and that it is important to be aware of it and prepare for it by clarifying one&#39;s values ​​and priorities.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<blockquote>\r\n<p>Always remind yourself of those who were too sad about something or who caused a great stir through misfortunes, enmities, the greatest positions of honor or other fortunate circumstances. Then present your reflection with the question: &ldquo;Where is all this now?&rdquo; It&#39;s smoke and ashes, a fairy tale or not even a fairy tale.</p>\r\n</blockquote>\r\n\r\n<p>It asks us to remember those who have either overcommitted themselves or experienced great success and fame. Marcus Aurelius suggests thinking about what ultimately remains of all this. He suggests that the things we worry so much about or bring us great joy are ultimately fleeting and often seem less significant when we look at them from a larger perspective. The quote encourages us to see our sorrows and triumphs in a larger context and to recognize that they are ultimately part of life&#39;s constant change and impermanence.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h2><strong>Closing thoughts</strong></h2>\r\n\r\n<p>Marcus Aurelius&#39; wisdom reminds us to recognize the transience of life and to live consciously. They encourage us to rethink our priorities and focus on what&#39;s really important. May the teachings of Marcus Aurelius inspire us to live a fulfilled and conscious life characterized by compassion, serenity and a clear view of reality.</p>\r\n\r\n<p>In the next article we will turn to another central theme of his philosophy. Stay tuned!</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><em>All quotes used in this post come from the work &quot;The Meditations of Marcus Aurelius&quot;. This book, also known as Self-Contemplations, was written by Emperor Marcus Aurelius and is a collection of personal notes and philosophical reflections. It is one of the most important works of Stoic philosophy.</em></p>\r\n"
  },
  {
    "id": 3,
    "title": "About Life and Ethics",
    "subtitle": "Life wisdom by Marcus Aurelius (Part 2)",
    "date": "May 14, 2024",
    "author": "Timon Rieger",
    "image_url": "https://blog.timonrieger.de/static/uploads/20.png",
    "body": "<h2><strong>Who is Marcus Aurelius?</strong></h2>\r\n\r\n<p>As a Roman emperor and Stoic, Marcus Aurelius is known for his profound thoughts and life wisdom, which still inspire many people today. His reflections on life, death, and human nature offer timeless insights that are relevant in the modern world. This blog post takes a closer look at some of his most important quotes and their relevance to our lives today.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h2><strong>5 quotes about life and ethics</strong></h2>\r\n\r\n<blockquote>\r\n<p>If you follow sound reason and work with zeal, strength and love in what you are about to do, without any other thought guiding you than that of keeping your inner being pure, as if you were soon to give up your spirit; if you pull yourself together in this way, neither hesitating nor hurrying, but allowing yourself to be satisfied with the energy naturally at your disposal and with the truthfulness that must shine forth from every word you utter, you will lead a happy life. And I would not know who could prevent you from doing so.</p>\r\n</blockquote>\r\n\r\n<p>It emphasizes the importance of a virtuous life and a clear conscience for personal happiness. The quote encourages one to act with determination and integrity, without being distracted by other motives, but solely for the purpose of keeping one&#39;s inner self pure. It emphasizes the need to use natural energy and truthfulness to lead a fulfilled and happy life, and expresses the belief that this can be achieved through a consistent focus on moral principles.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<blockquote>\r\n<p>For someone who considers only what happens at the right time to be a good, who is indifferent to whether he has a greater or lesser number of rational actions to show, who makes no distinction between a longer or shorter view of the world, even death is nothing terrible.</p>\r\n</blockquote>\r\n\r\n<p>It suggests that someone who has the ability to view the events in his life with serenity and wisdom does not perceive death as something terrible. By accepting that both the beautiful and the difficult moments of life are part of a greater whole, one can find an inner peace that also allows death to appear in a different light. This quote emphasizes the importance of serenity and overcoming the fear of the inevitable by living wisely.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<blockquote>\r\n<p>Love what you encounter and what is allotted to you, for what could you do more fairly?</p>\r\n</blockquote>\r\n\r\n<p>It reminds us that we should accept what happens to us with love and acceptance, as ultimately we have little control over it. It asks us to accept life&#39;s challenges as part of our journey and to face them with serenity and dignity.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<blockquote>\r\n<p>To what a first keen eye has taught you, add nothing more. You have learned that some people speak ill of you. Very well. But you have not heard that you are offended. You see, your child is ill. Very well. But you do not see that it is in danger. And so always leave it at the first, and add nothing from within yourself, and nothing will happen to you.</p>\r\n</blockquote>\r\n\r\n<p>This quote admonishes us not to be influenced by superficial impressions or opinions. It reminds us that we should not overreact when we are spoken badly of or when we are confronted with difficult situations. Instead of getting carried away by our inner thoughts and emotions, we should stay calm and focus on what is really important. It teaches us to maintain composure and clarity in difficult situations in order to protect ourselves from unnecessary suffering.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<blockquote>\r\n<p>But if you do not stop attaching importance to a lot of other things, you are not yet a free, independent, dispassionate person, but are always in a position to be envious and jealous and deceitful against those who possess what you value so highly, and suspicious that someone might want to take it from you, and in despair if you lack it, and full of reproach against the gods. But if it is your attitude alone that constitutes your worth and dignity in your eyes, then you will be able to respect yourself, please those around you and praise and glorify the gods.</p>\r\n</blockquote>\r\n\r\n<p>It advises you to take a step back in times of excitement or indignation and focus on your own inner strength. It emphasizes the importance of not allowing negative emotions to become excessive and instead striving to regain a harmonious mood of the soul. By learning to regulate your emotions and maintain an inner calm, you become better and better at maintaining this calm even in difficult situations. This leads to a feeling of serenity and inner stability, regardless of external circumstances.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h2><strong>Closing thoughts</strong></h2>\r\n\r\n<p>Marcus Aurelius&#39; wisdom reminds us to recognize the transience of life and to live consciously. They encourage us to rethink our priorities and focus on what&#39;s really important. May the teachings of Marcus Aurelius inspire us to live a fulfilled and conscious life characterized by compassion, serenity and a clear view of reality.</p>\r\n\r\n<p>In the next article we will turn to another central theme of his philosophy. Stay tuned!</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><em>All quotes used in this post come from the work &quot;The Meditations of Marcus Aurelius&quot;. This book, also known as Self-Contemplations, was written by Emperor Marcus Aurelius and is a collection of personal notes and philosophical reflections. It is one of the most important works of Stoic philosophy.</em></p>\r\n"
  },
  {
    "id": 4,
    "title": "About Life and Emotions",
    "subtitle": "Life wisdom by Marcus Aurelius (Part 3)",
    "date": "June 20, 2024",
    "author": "Timon Rieger",
    "image_url": "https://blog.timonrieger.de/static/uploads/21.png",
    "body": "<h2><strong>Who is Marcus Aurelius?</strong></h2>\r\n\r\n<p>As a Roman emperor and Stoic, Marcus Aurelius is known for his profound thoughts and life wisdom, which still inspire many people today. His reflections on life, death, and human nature offer timeless insights that are relevant in the modern world. This blog post takes a closer look at some of his most important quotes and their relevance to our lives today.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h2><strong>7 quotes about life and emotions</strong></h2>\r\n\r\n<blockquote>\r\n<p>Do you want to? then listen to this: Do not get upset and always stay with yourself. If someone has transgressed against you, he has transgressed against himself. If something sad has happened to you: it was destined for you from the beginning; everything that happens is destiny. And all in all: life is short.</p>\r\n</blockquote>\r\n\r\n<p>It emphasizes the importance of self-control and inner peace, even in difficult situations. The statement encourages you not to upset yourself and to remain true to yourself, even when faced with challenges. It points out that the behavior of other people or sad events are ultimately part of fate and were predetermined from the outset. Life is portrayed as short and fleeting, which emphasizes the importance of living it to its fullest and with serenity.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<blockquote>\r\n<p>It is not in the soul of another that makes you unhappy, nor in the turn of your external circumstances. Where then, you ask? In your judgment! Do not think it a misfortune, and all will be well. And if what at first surrounds you, your skin is wounded, cut, burned, that part of your being which judges such things must be at rest, that is, it must think that what can affect the good as well as the bad cannot possibly constitute our misfortune or our happiness.</p>\r\n</blockquote>\r\n\r\n<p>It emphasizes the importance of composure and self-reflection in difficult situations. The statement encourages people not to let negative emotions get the better of them and to stay true to themselves. It also emphasizes the idea that the actions of others ultimately affect only themselves and that sad events are part of the greater plan of destiny. The realization that life is short adds urgency to this quote, reminding us to use our precious time wisely and focus on what is important.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<blockquote>\r\n<p>If something happens in your surroundings that upsets and outrages you, withdraw into yourself quickly and do not give in unduly to the impressions that jeopardize your attitude. The more often we know how to regain the harmonious mood of the soul, the more capable we become of maintaining it.</p>\r\n</blockquote>\r\n\r\n<p>It emphasizes the importance of inner attitude and argues that what makes us unhappy does not depend on external circumstances or the actions of others, but on our own judgment about them. The statement emphasizes the power of the mind to keep calm in difficult situations and to maintain the perspective that happiness and unhappiness are ultimately subjective. It encourages examining one&#39;s own judgment and not letting external events or other people determine it. By keeping control of your judgment, you can maintain an inner calm regardless of external circumstances.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<blockquote>\r\n<p>As soon as someone has hurt you, you must immediately examine what view of good and evil made him do it. For as soon as this becomes clear to you, you will feel compassion for him and neither be surprised nor angry. Either you will find that you have no essentially different view of good from his, and then you must forgive him. Or you see the difference; but then it is not so difficult to remain kind to him who has erred.</p>\r\n</blockquote>\r\n\r\n<p>It encourages examining the motives and views of others in order to develop compassion and practice forgiveness. It points out that forgiveness is often possible when one recognizes that one&#39;s own ideas of good and evil do not necessarily differ from those of others.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<blockquote>\r\n<p>The sensually perceptible objects are beyond us. They stand alone, so to speak, outside our door. They know nothing about themselves, nor do they judge themselves. So who judges them? The dominant part of our soul.</p>\r\n</blockquote>\r\n\r\n<p>It describes how the things around us, although they exist, have no opinion or power of judgment of their own. Instead, the power of judgment over them lies with our own mind, specifically the dominant or controlling part of our soul. This reminds us that our perception and interpretation of the world is heavily influenced by our own thoughts, attitudes and beliefs.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<blockquote>\r\n<p>Do not forget that where you live you have quite the same as you would have in the mountains or by the sea or anywhere else you long to go. The shepherd, says Plato, who thus grazes by his fence on the mountain, feels no differently than he who is surrounded by a city wall.</p>\r\n</blockquote>\r\n\r\n<p>This quote reminds us that our external environment ultimately has less influence on our inner well-being than our own attitude towards it. It illustrates that the happiness or unhappiness we feel does not depend solely on our physical location, but on our perception and acceptance of what surrounds us. Even if we are in a place that we find less attractive or desirable, we can still find happiness and contentment by changing our attitude and mindset. Ultimately, the true source of our inner state lies within our own mind, regardless of external circumstances.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<blockquote>\r\n<p>And further, that it is not those actions that make us complain, but the ideas we have about them. Send them home and your anger will subside. But how? By considering that what happens to you through them is in truth nothing bad. If it were bad, you yourself would necessarily have been made bad by it.&quot; And further, that anger and displeasure at such things weigh us down much more than the things at which you are angry. And finally, that a loving mind, if its love is truly genuine and unfeigned, can be overcome by nothing.</p>\r\n</blockquote>\r\n\r\n<p>It emphasizes the importance of our own perception and interpretation of events for our emotional well-being. Marcus Aurelius encourages us to consciously recognize and let go of negative thoughts and ideas that can lead to anger and resentment. By recognizing that our reactions and feelings are primarily dependent on our own thoughts and interpretations, we can overcome our anger and find inner peace. The quote also emphasizes the transformative power of unconditional love and authenticity, which enables us to maintain compassion and serenity even in difficult situations.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h2><strong>Closing thoughts</strong></h2>\r\n\r\n<p>Marcus Aurelius&#39; wisdom reminds us to recognize the transience of life and to live consciously. They encourage us to rethink our priorities and focus on what&#39;s really important. May the teachings of Marcus Aurelius inspire us to live a fulfilled and conscious life characterized by compassion, serenity and a clear view of reality.</p>\r\n\r\n<p>And that brings us to the end of our journey through Marcus Aurelius&#39; most important teachings and quotes. I hope you have learned something new, gained an insight or better understood a certain concept.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><em>All quotes used in this post come from the work &quot;The Meditations of Marcus Aurelius&quot;. This book, also known as Self-Contemplations, was written by Emperor Marcus Aurelius and is a collection of personal notes and philosophical reflections. It is one of the most important works of Stoic philosophy.</em></p>\r\n"
  },
  {
    "id": 5,
    "title": "Backtesting Crypto Trading Signals",
    "subtitle": "Evaluating the Performance of a Telegram Crypto Signals Channel: Script Insights and Surprising Results",
    "date": "June 20, 2024",
    "author": "Timon Rieger",
    "image_url": "https://blog.timonrieger.de/static/uploads/22.png",
    "body": "<h2>Introduction</h2>\r\n\r\n<p>In the world of cryptocurrency trading, reliable signals can make a significant difference in trading outcomes. To assess the profitability of these signals, I backtested a Telegram Crypto Signals Channel I subscribed to lately. The results were surprising and insightful. Let&rsquo;s dive into the script I wrote and the analysis that followed.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<div data-darkreader-inline-bgcolor=\"\" data-darkreader-inline-bgimage=\"\" data-darkreader-inline-border-bottom=\"\" data-darkreader-inline-border-left=\"\" data-darkreader-inline-border-right=\"\" data-darkreader-inline-border-top=\"\" style=\"background: rgb(238, 238, 238); border: 1px solid rgb(204, 204, 204); padding: 5px 10px; --darkreader-inline-bgimage: initial; --darkreader-inline-bgcolor: #222426; --darkreader-inline-border-top: #3e4446; --darkreader-inline-border-right: #3e4446; --darkreader-inline-border-bottom: #3e4446; --darkreader-inline-border-left: #3e4446;\"><strong>Disclaimer</strong></div>\r\n\r\n<div data-darkreader-inline-bgcolor=\"\" data-darkreader-inline-bgimage=\"\" data-darkreader-inline-border-bottom=\"\" data-darkreader-inline-border-left=\"\" data-darkreader-inline-border-right=\"\" data-darkreader-inline-border-top=\"\" style=\"background: rgb(238, 238, 238); border: 1px solid rgb(204, 204, 204); padding: 5px 10px; --darkreader-inline-bgimage: initial; --darkreader-inline-bgcolor: #222426; --darkreader-inline-border-top: #3e4446; --darkreader-inline-border-right: #3e4446; --darkreader-inline-border-bottom: #3e4446; --darkreader-inline-border-left: #3e4446;\">The script and analysis presented in this post have not been verified by external parties. The results of my analysis may be inaccurate, as there might be factors I did not consider in my calculations. There may also be a significant tracking error compared to the &quot;index&quot; (the signals). You should conduct your own research, and please note that this is not financial advice.</div>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h2>About the Signals</h2>\r\n\r\n<p>The signals of the Telegram Channel I analyzed usually look like this:&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><kbd>\ud83d\udce9 #ARUSDT&nbsp;</kbd></p>\r\n\r\n<p><kbd>Long | Entry: 28.658</kbd></p>\r\n\r\n<p><kbd>Strategy name: #ARUSDT ARUSDT15-15USDTPERP - Binance Futures | 15 min timeframe</kbd></p>\r\n\r\n<p><kbd>&mdash; \ud83d\udce4 Signal details &mdash;</kbd></p>\r\n\r\n<p><kbd>Target 1 : 29.23 probability 100%</kbd></p>\r\n\r\n<p><kbd>Target 2 : 29.80 probability 92%</kbd></p>\r\n\r\n<p><kbd>Target 3 : 30.38 probability 86%</kbd></p>\r\n\r\n<p><kbd>Target 4 : 32.10 probability 72%</kbd></p>\r\n\r\n<p><kbd>\u26d4 Stop-Loss: 25.79 or opposite signal \ud83d\udd00 or add more at the dip \ud83d\udd3d</kbd></p>\r\n\r\n<p><kbd>\ud83c\udfe6 Leverage: 10x cross&nbsp;</kbd></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>If you&#39;re new to cryptocurrency, here is a brief explanation of the terms used in the trading signals:</p>\r\n\r\n<ul>\r\n\t<li><strong>Trading Pair</strong>: AR/USDT (trading Arweave against USD Tether coin)</li>\r\n\t<li><strong>Trading Direction</strong>: Long (profiting from an increase in value)</li>\r\n\t<li><strong>Entry</strong>: 28.658 (the entry price for the trade)</li>\r\n\t<li><strong>Targets/Take Profits (TP)</strong>: 29.23, 29.80, 30.38, 32.10 (prices at which to close the trade and secure profits)</li>\r\n\t<li><strong>Stop-Loss (further SL)</strong>: 25.79 (price at which to close the trade to limit your loss)</li>\r\n\t<li><strong>Leverage</strong>: 10 (if you invest $100 with a leverage of 10, your position is $1000)</li>\r\n</ul>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h2>Procedure for the Backtest</h2>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3>Data Preparation:</h3>\r\n\r\n<ol>\r\n\t<li><strong>Export Telegram Channel Data</strong>: Extract the data from the Telegram channel.</li>\r\n\t<li><strong>Filter Relevant Messages</strong>: Identify and filter messages that contain trading signals.</li>\r\n\t<li><strong>Extract Trade Information</strong>: Parse each relevant message to extract trade details.</li>\r\n\t<li><strong>Organize Trade Information</strong>: Store the extracted trade details in a JSON file.</li>\r\n</ol>\r\n\r\n<h3>Trade Simulation:</h3>\r\n\r\n<ol>\r\n\t<li><strong>Enter the Trade</strong>: Simulate entering the trade based on the entry price.</li>\r\n\t<li><strong>Check for SL and TPs</strong>: Monitor the trade to determine if it hits the stop-loss or any of the profit targets.</li>\r\n\t<li><strong>Calculate ROI</strong>: Compute the return on investment (profit or loss) for each trade.</li>\r\n\t<li><strong>Record Results</strong>: Add the ROI along with the trade&#39;s closing date to a CSV file.</li>\r\n</ol>\r\n\r\n<h3>Data Analysis:</h3>\r\n\r\n<ol>\r\n\t<li><strong>Group ROI by Date</strong>: Aggregate the ROI data by date to calculate the average profit or loss per day.</li>\r\n\t<li><strong>Plot Average ROI</strong>: Create a plot of the average daily ROI and include the mean value to indicate overall profitability (excluding trading fees).</li>\r\n\t<li><strong>Set Trading Parameters</strong>: Define trading parameters such as fees, margin, etc.</li>\r\n\t<li><strong>Calculate Portfolio Balance</strong>: Compute the day-over-day portfolio balance applying the defined parameters.</li>\r\n\t<li><strong>Calculate Risk Parameters</strong>: Evaluate risk metrics like volatility and Sharpe ratio.</li>\r\n\t<li><strong>Plot Account Balance</strong>: Visualize the account balance over time for each trade to assess strategy performance in a practical environment, including trading fees.</li>\r\n</ol>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h2>Detailed Code and Explanation for Each Step</h2>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3>Data Preparation</h3>\r\n\r\n<p><strong>1. Export Telegram Channel Data</strong></p>\r\n\r\n<p>&nbsp; &nbsp;Export the message history via Telegram as a JSON file.</p>\r\n\r\n<p>&nbsp; &nbsp;This step is manually done through the Telegram application. Export the desired channel&#39;s chat history to a JSON file.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>2. Filter Relevant Messages</strong></p>\r\n\r\n<p>Filter out messages that are not raw messages (i.e., exclude replies and other non-relevant messages).</p>\r\n\r\n<p><code>with open(&#39;telegram_data.json&#39;, &#39;r&#39;) as file:<br />\r\n&nbsp; &nbsp; all_messages = json.load(file)</code></p>\r\n\r\n<p><code>for trade in all_messages[&#39;messages&#39;]:<br />\r\n&nbsp; &nbsp; if not &quot;reply_to_message_id&quot; in trade:</code></p>\r\n\r\n<p><code>&nbsp; &nbsp; &nbsp; &nbsp; message_data = trade<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; combined_text = &quot;&quot;</code></p>\r\n\r\n<p><code>&nbsp; &nbsp; &nbsp; &nbsp; for item in trade[&#39;text&#39;]:<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if isinstance(item, dict) and &quot;text&quot; in item:<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; combined_text += item[&quot;text&quot;]<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; elif isinstance(item, str):<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; combined_text += item</code></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>3. Extract Trade Information</strong></p>\r\n\r\n<p>Use the `re` package in Python to search for specific keywords in the message text.</p>\r\n\r\n<p><code>symbol_match = re.search(r&quot;#(\\w+)&quot;, combined_text)<br />\r\nsymbol = symbol_match.group(1).replace(&#39;USDTPERP&#39;, &#39;/USDT&#39;) if symbol_match else None</code></p>\r\n\r\n<p><code>direction_match = re.search(r&quot;(Long|Short)&quot;, combined_text, re.IGNORECASE)<br />\r\ndirection = direction_match.group(1).capitalize() if direction_match else None</code></p>\r\n\r\n<p><code>entry_price_match = re.search(r&quot;Entry:\\s([\\d.]+)&quot;, combined_text)<br />\r\nentry_price = float(entry_price_match.group(1)) if entry_price_match else None</code></p>\r\n\r\n<p><code>targets_matches = re.findall(r&quot;Target\\s\\d\\s*:\\s([\\d.]+)&quot;, combined_text)</code></p>\r\n\r\n<p><code># Common ratio<br />\r\nr = 0.5<br />\r\n# Calculate the first term (a) for the sum to be 1<br />\r\ninitial_percentage = 1 / (1 + r + r**2 + r**3)</code></p>\r\n\r\n<p><code># Initialize the list of targets with exponential percentages<br />\r\ntargets = []<br />\r\ncurrent_percentage = initial_percentage</code></p>\r\n\r\n<p><code># Generate the targets with decreasing percentages<br />\r\nfor target in targets_matches:<br />\r\n&nbsp; &nbsp; targets.append({<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &quot;price&quot;: float(target),<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &quot;achieved&quot;: &quot;no&quot;,<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &quot;percentage&quot;: current_percentage<br />\r\n&nbsp; &nbsp; })<br />\r\n&nbsp; &nbsp; current_percentage *= r &nbsp;# Decrease the percentage exponentially</code></p>\r\n\r\n<p><code>if entry_price and direction:<br />\r\n&nbsp; &nbsp; sl = 0.95 &nbsp;# Example stop-loss percentage (5% loss threshold)<br />\r\n&nbsp; &nbsp; if direction == &quot;Long&quot;:<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; stop_loss = entry_price * sl<br />\r\n&nbsp; &nbsp; else:<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; stop_loss = entry_price * (2 - sl)</code></p>\r\n\r\n<p><code>leverage_match = re.search(r&quot;Leverage:\\s(\\d+)x&quot;, combined_text)<br />\r\nleverage = int(leverage_match.group(1)) if leverage_match else None</code></p>\r\n\r\n<p><code># Extract signal time<br />\r\nsignal_time = trade.get(&quot;date&quot;)</code><br />\r\n&nbsp;</p>\r\n\r\n<p><code>&nbsp;</code></p>\r\n\r\n<p><strong>4. Organize Trade Information</strong></p>\r\n\r\n<p>Show the trade information in JSON format.</p>\r\n\r\n<p><code>if symbol and signal_time and direction and leverage and entry_price and stop_loss and targets:<br />\r\n&nbsp; &nbsp; # Create the JSON structure<br />\r\n&nbsp; &nbsp; trade_data = {<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &quot;pair&quot;: symbol,<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &quot;signal_time&quot;: signal_time,<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &quot;direction&quot;: direction,<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &quot;leverage&quot;: leverage,<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &quot;entry&quot;: {<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;price&quot;: entry_price,<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;achieved&quot;: &quot;no&quot;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; },<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &quot;stop_loss&quot;: {<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;price&quot;: stop_loss,<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;achieved&quot;: &quot;no&quot;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; },<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &quot;targets&quot;: targets<br />\r\n&nbsp; &nbsp; }</code></p>\r\n\r\n<p><code>&nbsp; &nbsp; trade_list.append(trade_data)</code><br />\r\n&nbsp;</p>\r\n\r\n<p><code>&nbsp;</code></p>\r\n\r\n<h3>Trade Simulation</h3>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>1. Enter the Trade</strong></p>\r\n\r\n<p>Simulate entering a trade using the `ccxt` library.</p>\r\n\r\n<p><code>def check_entry(signal):<br />\r\n&nbsp; &nbsp; entry_timestamps_1h = fetch_historical_data(signal[&#39;pair&#39;], exchange.parse8601(signal[&#39;signal_time&#39;]), &quot;1h&quot;)<br />\r\n&nbsp; &nbsp; if entry_timestamps_1h is None:<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; return False<br />\r\n&nbsp; &nbsp; for index, row in entry_timestamps_1h.iterrows():<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; # Check if the entry price was reached<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; if row[&#39;low&#39;] &lt;= signal[&quot;entry&quot;][&quot;price&quot;] &lt;= row[&#39;high&#39;]:<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; entry_timestamps_1m = fetch_historical_data(signal[&#39;pair&#39;], exchange.parse8601(row[&#39;timestamp&#39;].isoformat()), &quot;1m&quot;)<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; for index, row in entry_timestamps_1m.iterrows():<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if row[&#39;low&#39;] &lt;= signal[&quot;entry&quot;][&quot;price&quot;] &lt;= row[&#39;high&#39;]:<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if row[&#39;timestamp&#39;].isoformat() &gt;= signal[&quot;signal_time&quot;]:<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; signal[&quot;entry&quot;][&quot;time_achieved&quot;] = row[&#39;timestamp&#39;].isoformat()<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; signal[&quot;entry&quot;][&quot;achieved&quot;] = &#39;yes&#39;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return True<br />\r\n&nbsp; &nbsp; return False</code></p>\r\n\r\n<p><code>&nbsp;</code></p>\r\n\r\n<p><strong>2. Check for Stop Loss or Take Profits/Targets</strong></p>\r\n\r\n<p>Check if TP was reached before the SL or vice versa.</p>\r\n\r\n<p><code>def check_sl_or_tp(signal):<br />\r\n&nbsp; &nbsp; timestamps_after_entry_1h = fetch_historical_data(signal[&#39;pair&#39;], exchange.parse8601(signal[&#39;entry&#39;][&#39;time_achieved&#39;]), &quot;1h&quot;)</code></p>\r\n\r\n<p><code>&nbsp; &nbsp; if timestamps_after_entry_1h is None:<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; return False</code></p>\r\n\r\n<p><code>&nbsp; &nbsp; for index, row in timestamps_after_entry_1h.iterrows():<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; trail_stop_loss(signal)<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; targets = [target for target in signal[&quot;targets&quot;] if target[&quot;achieved&quot;] == &quot;no&quot;]<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; # Check if all TPs are reached before the SL<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; if not targets:<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return True, signal[&quot;targets&quot;][-1][&quot;time_achieved&quot;]</code></p>\r\n\r\n<p><code>&nbsp; &nbsp; &nbsp; &nbsp; # Long<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; elif signal[&quot;direction&quot;] == &quot;Long&quot;:<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; sl_achieved = row[&#39;low&#39;] &lt;= signal[&quot;stop_loss&quot;][&quot;price&quot;]<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; tp_achieved = any([row[&#39;high&#39;] &gt;= target[&quot;price&quot;] for target in targets])</code></p>\r\n\r\n<p><code>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if sl_achieved and tp_achieved:</code></p>\r\n\r\n<p><code>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; timestamps_after_entry_1m = fetch_historical_data(signal[&#39;pair&#39;], exchange.parse8601(row[&#39;timestamp&#39;].isoformat()), &quot;1m&quot;)<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; stop_loss_time = timestamps_after_entry_1m[timestamps_after_entry_1m[&#39;low&#39;] &lt;= signal[&quot;stop_loss&quot;][&quot;price&quot;]][&#39;timestamp&#39;].iloc[0].isoformat()<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; for target in targets:<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if row[&#39;high&#39;] &gt;= target[&quot;price&quot;]:<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; tp_time = timestamps_after_entry_1m[timestamps_after_entry_1m[&#39;high&#39;] &gt;= target[&quot;price&quot;]][&#39;timestamp&#39;].iloc[0].isoformat()<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; else:<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; continue<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if stop_loss_time &gt; tp_time:<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; target[&quot;achieved&quot;] = &quot;yes&quot;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; target[&quot;time_achieved&quot;] = tp_time<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; signal[&quot;stop_loss&quot;][&quot;achieved&quot;] = &quot;yes&quot;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; signal[&quot;stop_loss&quot;][&quot;time_achieved&quot;] = stop_loss_time<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return True, stop_loss_time</code></p>\r\n\r\n<p><code>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; elif sl_achieved:<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; signal[&quot;stop_loss&quot;][&quot;achieved&quot;] = &quot;yes&quot;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; signal[&quot;stop_loss&quot;][&quot;time_achieved&quot;] = row[&#39;timestamp&#39;].isoformat()<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return True, signal[&quot;stop_loss&quot;][&quot;time_achieved&quot;]</code></p>\r\n\r\n<p><code>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; elif tp_achieved:<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; for target in targets:<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if row[&quot;high&quot;] &gt;= target[&quot;price&quot;]:<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; target[&quot;achieved&quot;] = &quot;yes&quot;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; target[&quot;time_achieved&quot;] = row[&#39;timestamp&#39;].isoformat()</code><br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<code>...</code></p>\r\n\r\n<p><code>&nbsp;</code></p>\r\n\r\n<p><strong>3. Calculate ROI</strong></p>\r\n\r\n<p>Calculate the Return on Investment for each trade.</p>\r\n\r\n<p><code>def calculate_roi(signal):<br />\r\n&nbsp; &nbsp; entry_price = signal[&#39;entry&#39;][&#39;price&#39;]<br />\r\n&nbsp; &nbsp; stop_loss_price = signal[&#39;stop_loss&#39;][&#39;price&#39;]<br />\r\n&nbsp; &nbsp; direction = signal[&#39;direction&#39;]<br />\r\n&nbsp; &nbsp; total_percentage = 0.0</code></p>\r\n\r\n<p><code>&nbsp; &nbsp; # Calculate ROI for each achieved target<br />\r\n&nbsp; &nbsp; for target in signal[&#39;targets&#39;]:<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; if target[&#39;achieved&#39;] == &#39;yes&#39;:<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; target_price = target[&#39;price&#39;]<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; percentage_sold = target[&#39;percentage&#39;]<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if direction == &#39;Long&#39;:<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; roi = ((target_price - entry_price) / entry_price) * 100 * percentage_sold<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; elif direction == &#39;Short&#39;:<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; roi = ((entry_price - target_price) / entry_price) * 100 * percentage_sold<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; total_percentage += roi</code></p>\r\n\r\n<p><code>&nbsp; &nbsp; # Check if stop loss was hit and calculate its ROI<br />\r\n&nbsp; &nbsp; if signal[&#39;stop_loss&#39;][&#39;achieved&#39;] == &#39;yes&#39;:<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; percentage_not_sold = len([target for target in signal[&#39;targets&#39;] if target[&#39;achieved&#39;] == &quot;no&quot;]) / len(signal[&quot;targets&quot;])<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; if direction == &#39;Long&#39;:<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; stop_loss_roi = ((stop_loss_price - entry_price) / entry_price) * 100 * percentage_not_sold<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; elif direction == &#39;Short&#39;:<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; stop_loss_roi = ((entry_price - stop_loss_price) / entry_price) * 100 * percentage_not_sold<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; total_percentage += stop_loss_roi</code></p>\r\n\r\n<p><code>&nbsp; &nbsp; return round(total_percentage * signal[&quot;leverage&quot;], 2)</code></p>\r\n\r\n<p><code>&nbsp;</code></p>\r\n\r\n<p><strong>4. Record Results</strong></p>\r\n\r\n<p>Record the results of each trade.</p>\r\n\r\n<p><code>with open(f&quot;results.csv&quot;, &quot;w&quot;, newline=&#39;&#39;, encoding=&#39;utf-8&#39;) as file:<br />\r\n&nbsp; &nbsp; writer = csv.writer(file)<br />\r\n&nbsp; &nbsp; # Write the header row<br />\r\n&nbsp; &nbsp; writer.writerow([&quot;Profit&quot;, &quot;Closed at&quot;])</code></p>\r\n\r\n<p><code>&nbsp; &nbsp; # Simulate trades for all signals<br />\r\n&nbsp; &nbsp; for signal in signals_data:<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; print(f&quot;{signals_data.index(signal)}/{len(signals_data)}&quot;)<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; signal[&quot;signal_time&quot;] = pd.to_datetime(signal[&quot;signal_time&quot;]).isoformat()<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; trade_finished = simulate_trade(signal)<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; if trade_finished:<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; roi = calculate_roi(signal)<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; signal[&quot;result&quot;][&quot;roi&quot;] = roi<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; writer.writerow([signal[&quot;result&quot;][&quot;roi&quot;], signal[&quot;result&quot;][&quot;close_time&quot;]])<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; else:<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; for anti_signal in signals_data[signals_data.index(signal):]:<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if signal[&#39;pair&#39;] == anti_signal[&#39;pair&#39;] and signal[&quot;direction&quot;] != anti_signal[&#39;direction&#39;]:<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; roi = calculate_roi(signal)<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; signal[&quot;result&quot;] = {<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;close_time&quot;: anti_signal[&#39;signal_time&#39;],<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;roi&quot;: roi<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break</code></p>\r\n\r\n<p><code>&nbsp;</code></p>\r\n\r\n<h3>Data Analysis</h3>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>1. Group ROI by Date</strong></p>\r\n\r\n<p>Group Return on Investment (ROI) by date.</p>\r\n\r\n<p><code>for df in dfs:<br />\r\n&nbsp; &nbsp; # Group by &#39;Closed at&#39; date and calculate mean<br />\r\n&nbsp; &nbsp; grouped_df = df.groupby(&#39;Closed at&#39;).mean().reset_index()</code></p>\r\n\r\n<p><code>&nbsp; &nbsp; # Calculate rolling mean of &#39;Profit&#39; with a window of 7 days<br />\r\n&nbsp; &nbsp; grouped_df[&#39;Rolling Profit&#39;] = grouped_df[&#39;Profit&#39;].rolling(window=7).mean()</code></p>\r\n\r\n<p><code>&nbsp; &nbsp; # Append the results to the lists<br />\r\n&nbsp; &nbsp; grouped_dfs.append(grouped_df)</code></p>\r\n\r\n<p><code>&nbsp;</code></p>\r\n\r\n<p><strong>2. Plot Average ROI</strong></p>\r\n\r\n<p>Plot the average ROI over time. Please note that this represents the daily ROI without accounting for fees. The actual daily ROI is significantly lower, as indicated in the legend of the second plot.</p>\r\n\r\n<p><code>for csv in csvs:<br />\r\n&nbsp; &nbsp; index = csvs.index(csv)</code></p>\r\n\r\n<p><code>&nbsp; &nbsp; plt.figure(figsize=(20, 10))<br />\r\n&nbsp; &nbsp; plt.plot(grouped_dfs[index][&#39;Closed at&#39;], grouped_dfs[index][&#39;Profit&#39;], label=&#39;ROI per trade&#39;, alpha=0.5)<br />\r\n&nbsp; &nbsp; plt.plot(grouped_dfs[index][&#39;Closed at&#39;], grouped_dfs[index][&#39;Rolling Profit&#39;], label=&quot;1W Moving Average&quot;, color=&#39;red&#39;)<br />\r\n&nbsp; &nbsp; plt.axhline(y=grouped_dfs[index][&#39;Profit&#39;].mean(), color=&#39;red&#39;, linestyle=&#39;:&#39;, label=f&quot;Mean ({round(grouped_dfs[index][&#39;Profit&#39;].mean(), 4)})&quot;)<br />\r\n&nbsp; &nbsp; plt.axhline(y=0, color=&#39;black&#39;, linestyle=&#39;--&#39;)</code></p>\r\n\r\n<p><code>&nbsp; &nbsp; plt.ylim([-1, 1])<br />\r\n&nbsp; &nbsp; # Set the locator for the x-axis to locate months<br />\r\n&nbsp; &nbsp; ax = plt.gca()<br />\r\n&nbsp; &nbsp; ax.xaxis.set_major_locator(mdates.MonthLocator())</code></p>\r\n\r\n<p><code>&nbsp; &nbsp; plt.xticks(rotation=20, fontsize=8)<br />\r\n&nbsp; &nbsp; plt.title(f&#39;Avgerage ROI per Trade across {dfs[index][&quot;Profit&quot;].shape[0]} Trades within {dfs[index][&quot;Closed at&quot;].nunique()} Trading Days - {os.path.splitext(os.path.basename(csv))[0]}&#39;, fontsize=16)</code></p>\r\n\r\n<p><code>&nbsp; &nbsp; plt.legend()<br />\r\n&nbsp; &nbsp; plt.grid(True, alpha=0.5)<br />\r\n&nbsp; &nbsp; plt.show()</code></p>\r\n\r\n<p><img alt=\"\" src=\"https://blog.timonrieger.de/static/uploads/11.png\" style=\"height:100%; width:100%\" /></p>\r\n\r\n<p><code>&nbsp;</code></p>\r\n\r\n<p><strong>3. Set Trading Parameters</strong></p>\r\n\r\n<p>Set parameters such as taker fee, maker fee, funding fee, margin, and leverage.&nbsp;The Taker fee, typically between 0.04% and 0.06% of the position size, is charged when entering a trade. The Maker fee, about half the size of the taker fee, is charged upon trade closure. For simplicity, I&#39;ve assumed a conservative total taker fee of 0.1%. The funding fee and average funding cycles per trade occur every 8 hours, transferring payments between Short Traders and Long Traders, based on trade duration. With an average trade open for one day, this equates to approximately 3 funding cycles (24h / 8h). Margin represents the percentage of the account balance used for trading (e.g., 0.02 for 2%). Leverage multiplies fees based on the position size, not the initial investment margin.</p>\r\n\r\n<p><code>INITIAL = 1000<br />\r\nMARGIN = 0.02&nbsp;# 2% adapt as you want<br />\r\nTAKER_FEE = 0.001 &nbsp;# 0.1%<br />\r\nFUNDING_FEE = 0.0002 &nbsp;# 0.02%<br />\r\nLEVERAGE = 10&nbsp;<br />\r\nAVG_FUNDING_CYCLES_PER_TRADE = 3 &nbsp;# 24h Avg. Trade Length</code></p>\r\n\r\n<p><code>&nbsp;</code></p>\r\n\r\n<p><strong>4. Calculate Portfolio Balance</strong></p>\r\n\r\n<p>Calculate the portfolio balance over time.</p>\r\n\r\n<p><code>for fees_df in dfs:<br />\r\n&nbsp; &nbsp; # Initialize the first balance value<br />\r\n&nbsp; &nbsp; initial_balance = INITIAL + (INITIAL * MARGIN * fees_df.loc[0, &#39;Profit&#39;])<br />\r\n&nbsp; &nbsp; # Subtract taker fee for the first trade<br />\r\n&nbsp; &nbsp; initial_balance -= initial_balance * TAKER_FEE<br />\r\n&nbsp; &nbsp; fees_df.loc[0, &#39;Balance&#39;] = initial_balance</code></p>\r\n\r\n<p><code>&nbsp; &nbsp; # Iterate through the DataFrame starting from the second row<br />\r\n&nbsp; &nbsp; for i in range(1, len(fees_df)):<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; previous_balance = fees_df.loc[i - 1, &#39;Balance&#39;]<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; profit = fees_df.loc[i, &#39;Profit&#39;]</code></p>\r\n\r\n<p><code>&nbsp; &nbsp; &nbsp; &nbsp; # Calculate new balance<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; new_balance = previous_balance + (previous_balance * MARGIN * profit - (previous_balance * MARGIN * LEVERAGE * FUNDING_FEE * AVG_FUNDING_CYCLES_PER_TRADE) - (previous_balance * MARGIN * TAKER_FEE)) &nbsp;# Calculating the funding fees based on position size and trade duration</code></p>\r\n\r\n<p><code>&nbsp; &nbsp; &nbsp; &nbsp; fees_df.loc[i, &#39;Balance&#39;] = new_balance</code><br />\r\n&nbsp;</p>\r\n\r\n<p><code>&nbsp;</code></p>\r\n\r\n<p><strong>5. Calculate Risk Parameters</strong></p>\r\n\r\n<p>Calculate volatility, Sharpe ratio, and maximal drawdown.</p>\r\n\r\n<p><code># Calculate daily returns<br />\r\ndaily_roi = np.diff(fees_df[&#39;Balance&#39;]) / fees_df[&#39;Balance&#39;][:-1]</code></p>\r\n\r\n<p><code># Calculate average daily return<br />\r\navg_daily_roi = np.mean(daily_roi) * 100</code></p>\r\n\r\n<p><code># Calculate standard deviation of daily returns<br />\r\nvolatility = np.std(daily_roi) * 100</code></p>\r\n\r\n<p><code># Assumed risk-free rate (in percent)<br />\r\nrisk_free_rate = 3/365</code></p>\r\n\r\n<p><code># Calculate Sharpe Ratio<br />\r\nsharpe_ratio = (avg_daily_roi - risk_free_rate) / volatility</code></p>\r\n\r\n<p><code># Calculate the running maximum of the balance<br />\r\nrunning_max = fees_df[&#39;Balance&#39;].cummax()</code></p>\r\n\r\n<p><code># Calculate drawdown<br />\r\ndrawdown = (running_max - fees_df[&#39;Balance&#39;]) / running_max</code></p>\r\n\r\n<p><code># Calculate maximum drawdown<br />\r\nmax_drawdown = drawdown.max()</code></p>\r\n\r\n<p><code># Convert maximum drawdown to a percentage<br />\r\nmax_drawdown_percent = max_drawdown * 100</code></p>\r\n\r\n<p><code># Calculate Composite Score<br />\r\nscore = (sharpe_ratio * avg_daily_roi) / (volatility * max_drawdown)</code><br />\r\n&nbsp;</p>\r\n\r\n<p><strong>6. Plot Account Balance</strong>&nbsp;</p>\r\n\r\n<p>Visualize the account balance over time for each trade to assess strategy performance in a practical environment, including trading fees.</p>\r\n\r\n<p><img alt=\"\" src=\"https://blog.timonrieger.de/static/uploads/12.png\" style=\"height:100%; width:100%\" /></p>\r\n\r\n<h2>&nbsp;</h2>\r\n\r\n<h2>Results</h2>\r\n\r\n<p>As seen above, this strategy proves to be profitable. Before factoring in fees and trade parameters, it achieves an average daily ROI of 2.85%. Applying these parameters, starting with a $1000 initial investment on May 1, 2023, would yield $2500 by June 18, 2024. While this timeframe is relatively short in finance, it demonstrates the potential for significant profit with over 2000 trades annually.</p>\r\n\r\n<p>The strategy involves 4 Take Profit Targets that decrease exponentially as positions are closed. Additionally, it employs a trailing stop mechanism, which continuously adjusts the stop loss to the latest reached target. When the first profit target is achieved, the stop is moved to breakeven; upon reaching the second target, it adjusts to the first target price, and so forth.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h2>Conclusion</h2>\r\n\r\n<p>I hope you found that study interesting! Please remain skeptical and don&#39;t rely entirely on this study, as errors may have occurred. However, it does highlight that not every Telegram Crypto Signals Group is ineffective. The key is to choose wisely! It's important to note that this strategy could outperform simply buying and holding Bitcoin over the same timeframe by 23% (achieving 150%+ returns compared to 127%). You can view all the code used in this study on <a href=\"https://github.com/timonrieger/backtesting-trading-groups/blob/main/main.py\" target=\"_blank\">Github</a>.</p>\r\n\r\n<p>&nbsp;</p>\r\n"
  },
  {
    "id": 6,
    "title": "Building a Profitable Betting Strategy (Part 1)",
    "subtitle": "Understanding 14 Seasons of Bundesliga Matches for Developing a Profitable Betting Strategy",
    "date": "June 26, 2024",
    "author": "Timon Rieger",
    "image_url": "https://blog.timonrieger.de/static/uploads/23.png",
    "body": "<p>Welcome to my analysis of Bundesliga match results over 14 seasons, from 2009/10 to 2023/24. Using data from <a href=\"https://www.openligadb.de/\">OpenLigaDB</a>, we&#39;ll explore the distribution of match outcomes, results by winning team, and scoring times.</p>\r\n\r\n<p>This post sets the stage by preparing and visualizing the data with Python, Plotly, and Matplotlib. Our goal is to uncover trends and patterns that will be useful for a follow-up post on value betting strategies, specifically focusing on over 0.5 goals.</p>\r\n\r\n<p>Let&#39;s dive into the details of Bundesliga match results to better understand the dynamics of the league.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><img alt=\"\" src=\"https://blog.timonrieger.de/static/uploads/1.png\" style=\"height:100%; width:100%\" /></p>\r\n\r\n<p>This pie chart displays the distribution of the most common match outcomes in Bundesliga games from the 2009/10 season to the 2023/24 season. Each slice of the pie represents a different match outcome, with the size of each slice indicating the proportion of matches that ended with that specific scoreline.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><img alt=\"\" src=\"https://blog.timonrieger.de/static/uploads/2.png\" style=\"height:100%; width:100%\" /></p>\r\n\r\n<h3>1:1 Leading&nbsp;for 14 Seasons</h3>\r\n\r\n<p>This graph is a stacked area chart showing the changes in the percentages of the top 10 most common Bundesliga match results from 2009 to 2023. The x-axis represents the years, while the y-axis indicates the percentage of matches that ended in each specific result. Each color in the chart corresponds to a specific match result, such as 1:1, 2:1, 2:0, and so on. The 1:1 result is the most common throughout the period, consistently occupying the largest area. The results 2:1, 2:0, and 1:0 also frequently appear, indicating their regular occurrence in matches. There is a noticeable increase in 2:0 and 2:1 outcomes around 2014-2018, while 0:0 results slightly decrease post-2020. The overall percentage of these top 10 results remains high, often surpassing 70%, showing their dominance in match outcomes.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><img alt=\"\" src=\"https://blog.timonrieger.de/static/uploads/3.png\" style=\"height:100%; width:100%\" /></p>\r\n\r\n<p>This pie chart illustrates the distribution of Bundesliga match outcomes by the winning team from the 2009/10 season to the 2023/24 season. The chart is divided into three sections, each representing a different type of match result: home win, away win, and draw.&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3>Why Home Teams Win More Often</h3>\r\n\r\n<p>Playing at home provides teams with the advantage of familiar surroundings, including the pitch, changing rooms, and even the local climate. Additionally, home teams benefit from the support of their local fans, which can boost player morale and create an intimidating atmosphere for the visiting team. The reduction in travel fatigue also plays a crucial role, as away teams often have to travel long distances, which can affect their performance. Lastly, referees, albeit subconsciously, may be influenced by the home crowd, potentially leading to favorable decisions for the home team. These factors combined contribute to the higher percentage of home wins in the Bundesliga.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3><img alt=\"\" src=\"https://blog.timonrieger.de/static/uploads/4.png\" style=\"height:100%; width:100%\" /></h3>\r\n\r\n<p>This histogram illustrates the distribution of the first goal timing in Bundesliga matches from the 2009/10 season to the 2023/24 season. The x-axis represents the minute of the match when the first goal was scored, and the y-axis represents the count or frequency of matches that had their first goal scored at each minute.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3>Most First Goals are Scored between the 5th and 12th Minute</h3>\r\n\r\n<p>The chart shows that the majority of first goals are scored within the first 30 minutes of the match, with the highest frequency occurring between the 4th and 20th minutes. There is a noticeable peak around the 10th minute, indicating that first goals are commonly scored early in the match. After the initial 30 minutes, the frequency of first goals decreases steadily as the match progresses. Fewer first goals are scored in the latter stages of the first half and during the second half of the match. The red dashed line on the chart represents the average timing of the first goal, which is around the 29th minute.&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><img alt=\"\" src=\"https://blog.timonrieger.de/static/uploads/5.png\" style=\"height:100%; width:100%\" /></p>\r\n\r\n<p>This graph illustrates the relationship between the probability of a 0:0 draw and the odds for over 0.5 goals across different minutes of a match. The x-axis represents the minutes of the game, ranging from 0 to 45, while the left y-axis shows the probability percentage, and the right y-axis displays the odds. The blue line represents the increasing probability of a 0:0 draw as the match progresses, starting at around 6% and reaching up to nearly 24%.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3>The Precision in Calculating Betting Odds</h3>\r\n\r\n<p>The green line shows the odds for over 0.5 goals, which also rise as time passes, starting just above 1.07 and climbing to around 1.29. Both lines follow a similar upward trend, indicating that as the game progresses, both the likelihood of a 0:0 draw and the odds for over 0.5 goals increase. The alignment of the two lines suggests a close correlation between the rising probability of a draw and the changing odds for goals. This graph effectively shows how in-play betting odds and probabilities adjust as a match moves towards halftime. As you can see the odds for over 0.5 goals are always below the probabilit that there won&#39;t be any goals in the match. Can you even win on the long run?</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><img alt=\"\" src=\"https://blog.timonrieger.de/static/uploads/6.png\" style=\"height:100%; width:100%\" /></p>\r\n\r\n<p>This series of pie charts illustrates the distribution of match outcomes in the Bundesliga based on the time when the score remains 0:0. Each pie chart represents a different minute interval, starting from minute 0 up to minute 95. Initially, the match outcomes are diverse, with a variety of scores being equally probable. As the game progresses, the probability of a 0:0 draw increases significantly, especially after the 60th minute. By the 90th minute, the 0:0 draw becomes the most dominant outcome, comprising over 90% of the results. This trend highlights that as more time passes without a goal, the likelihood of the match ending in a 0:0 draw increases substantially.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>I hope you enjoyed reading this! Stay tuned for the&nbsp;next post, where we&#39;ll delve into building our own value betting strategy using these insights and more data.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><em>All graphics were created by me and are available for non-commercial use. Please note that the analysis and calculations presented here may contain errors.</em></p>\r\n"
  },
  {
    "id": 7,
    "title": "Mastering Crypto Bullruns: A Proven Strategy for Maximizing Profits",
    "subtitle": "Leveraging the ColinTalksCrypto Bitcoin Bullrun Index (CBBI) to Optimize Gains in Crypto Bullruns",
    "date": "August 13, 2024",
    "author": "Timon Rieger",
    "image_url": "https://blog.timonrieger.de/static/uploads/24.png",
    "body": "<p>This blog post will deal with trading the crypto bullruns in the most optimal way to secure profits and not miss the jump-off. This strategy would have easily outperformed holding bitcoin, as we would have sold at each cycle top and reinvested everything in the bear market. I will use this plan for altcoins as well, as they are highly correlated with bitcoin, making it difficult to predict the exact top for each coin. This approach may limit maximum profits, but it helps to secure them.</p><p>This strategy is based on the ColinTalksCrypto Bitcoin Bullrun Index (CBBI).&nbsp;The CBBI is a Bitcoin&nbsp;index&nbsp;that utilizes advanced, real-time analysis of 9 metrics to help us understand what stage of the Bitcoin bull run and bear market cycles we are in. The confidence score indicates whether we are approaching the top/bottom of a blow-off Bitcoin cycle.&nbsp;The CBBI algorithm and website are 100% open source. This makes CBBI different from other Bitcoin price indexes. I would highly suggest, having a look into the <a href=\"https://colintalkscrypto.com/cbbi/\">CBBI</a> yourself.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><img alt=\"\" src=\"https://blog.timonrieger.de/static/uploads/10.png\" style=\"height:100%; width:100%\" /></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h2>Strategy Guidelines</h2><p>&nbsp;</p>\r\n\r\n<ul>\r\n\t<li><strong>Buying:</strong>\r\n\r\n\t<ul>\r\n\t\t<li>Begin accumulation if CBBI is below 10.</li>\r\n\t\t<li>The accumulation period spans 30 to 150 days, typically averaging 70-80 days.</li>\r\n\t\t<li>Divide your predetermined investment into 2% increments and invest daily when the buying condition is met.</li>\r\n\t</ul>\r\n\t</li>\r\n\t<li><strong>Selling:</strong>\r\n\t<ul>\r\n\t\t<li>Sell 10% of your holdings on the 7th consecutive day that CBBI stays above 80.</li>\r\n\t\t<li>Sell&nbsp;20% on the 7th consecutive day that CBBI remains above 85, provided the selling price is at least 10% higher than your last sell.</li>\r\n\t\t<li>Sell 30% on the 7th consecutive day that CBBI stays above 90, ensuring the selling price is at least 10% higher than your previous sell.</li>\r\n\t\t<li>Sell the remaining 40% on the 7th consecutive day that CBBI remains above 95, with the selling price being at least 10% higher than your last sell.</li>\r\n\t</ul>\r\n\t</li>\r\n</ul>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h2>Historical Performance Summary</h2><p>&nbsp;</p>\r\n\r\n<ul>\r\n\t<li><strong>2013:</strong>\r\n\r\n\t<ul>\r\n\t\t<li><strong>Buy:</strong> DCA at $2.50 over a 1-month accumulation</li>\r\n\t\t<li><strong>Sell:</strong> 10% at $181, 20% at $813, 30% at $1,012, 40% at $1,048</li>\r\n\t\t<li><strong>Your Return:</strong> 361.4x</li>\r\n\t\t<li><strong>Optimal Return:</strong> 575x</li>\r\n\t</ul>\r\n\t</li>\r\n\t<li><strong>2017:</strong>\r\n\t<ul>\r\n\t\t<li><strong>Buy:</strong> DCA at $230 over a 5-month accumulation</li>\r\n\t\t<li><strong>Sell:</strong> 10% at $5,666, 20% at $8,220, 30% at $10,977, 40% at $16,523</li>\r\n\t\t<li><strong>Your Return:</strong> 52.66x</li>\r\n\t\t<li><strong>Optimal Return:</strong> 98.915x</li>\r\n\t</ul>\r\n\t</li>\r\n\t<li><strong>2021:</strong>\r\n\t<ul>\r\n\t\t<li><strong>Buy:</strong> DCA at $3,550 over a 2-month accumulation</li>\r\n\t\t<li><strong>Sell:</strong> 10% at $39,567, 20% at $46,567, 30% at $52,354, 40% at $59,384</li>\r\n\t\t<li><strong>Your Return:</strong> 14.85x</li>\r\n\t\t<li><strong>Optimal Return:</strong> 20.27x</li>\r\n\t</ul>\r\n\t</li>\r\n\t<li><strong>2025:</strong>\r\n\t<ul>\r\n\t\t<li><strong>Buy:</strong> DCA at $16,500 over a 2.5-month accumulation</li>\r\n\t\t<li><strong>Sell:</strong> TBD</li>\r\n\t\t<li><strong>Your Return:</strong> TBD</li>\r\n\t\t<li><strong>Optimal Return:</strong> TBD</li>\r\n\t</ul>\r\n\t</li>\r\n</ul>\r\n<p>&nbsp;</p>"
  }
]
